// <auto-generated />
using System;
using Infra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250214203840_VencimentoParcelas")]
    partial class VencimentoParcelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("Movimentacoes.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoria_id");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT")
                        .HasColumnName("criadoEm");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("movimentacoes");
                });

            modelBuilder.Entity("Movimentacoes.Models.MovimentacaoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT")
                        .HasColumnName("criadoEm");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("TEXT")
                        .HasColumnName("deletadoEm");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("movimentacoes_categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CriadoEm = new DateTime(2025, 2, 14, 16, 38, 40, 52, DateTimeKind.Local).AddTicks(9472),
                            Nome = "Comida",
                            Tipo = "SAIDA"
                        },
                        new
                        {
                            Id = 2,
                            CriadoEm = new DateTime(2025, 2, 14, 16, 38, 40, 52, DateTimeKind.Local).AddTicks(9507),
                            Nome = "Educação",
                            Tipo = "SAIDA"
                        });
                });

            modelBuilder.Entity("Movimentacoes.Models.MovimentacaoParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT")
                        .HasColumnName("criadoEm");

                    b.Property<int>("MovimentacaoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("movimentacao_id");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER")
                        .HasColumnName("numero");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL")
                        .HasColumnName("valor");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("TEXT")
                        .HasColumnName("vencimento");

                    b.HasKey("Id");

                    b.HasIndex("MovimentacaoId");

                    b.ToTable("movimentacoes_parcelas");
                });

            modelBuilder.Entity("Movimentacoes.Models.Movimentacao", b =>
                {
                    b.HasOne("Movimentacoes.Models.MovimentacaoCategoria", "Categoria")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Movimentacoes.Models.MovimentacaoParcela", b =>
                {
                    b.HasOne("Movimentacoes.Models.Movimentacao", "Movimentacao")
                        .WithMany("MovimentacaoParcelas")
                        .HasForeignKey("MovimentacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movimentacao");
                });

            modelBuilder.Entity("Movimentacoes.Models.Movimentacao", b =>
                {
                    b.Navigation("MovimentacaoParcelas");
                });

            modelBuilder.Entity("Movimentacoes.Models.MovimentacaoCategoria", b =>
                {
                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
